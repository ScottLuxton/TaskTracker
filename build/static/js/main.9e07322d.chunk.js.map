{"version":3,"sources":["components.js/Button.js","components.js/Header.js","components.js/Task.js","components.js/Tasks.js","components.js/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e07322d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color, text, onClick }) => {    \r\n  \r\n    return (\r\n        <button onClick= {onClick} style={{backgroundColor: color}}\r\n        className='btn'>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick : PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ( {title, onAdd, showAdd} ) => {\r\n            \r\n    return (\r\n        <header className = 'header'>\r\n            <h1> {title} </h1>\r\n            <Button \r\n            color={showAdd ? 'red' : 'green'} \r\n            text={showAdd ? 'Close' : 'Add'} \r\n            onClick = {onAdd} />                    \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title:'Task Tracker',\r\n}\r\n\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className= {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() =>\r\n        onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}{''}\r\n                <FaTimes\r\n                    style = {{color: 'red', cursor: 'pointer'}}\r\n                    onClick = {() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle }) => {\r\n\r\n     return (\r\n        <>\r\n            {tasks.map((task) =>(\r\n                <Task key = {task.id} task={task}\r\n                onDelete = {onDelete} \r\n                onToggle={onToggle} />\r\n         ))}            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useState } from 'react' \r\n\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!text) {\r\n            alert ('Please add a task')\r\n            return \r\n        }\r\n\r\n    onAdd({ text, day, reminder})\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n}\r\n\r\n\r\n    return (\r\n        <form className = 'add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label> Task </label>\r\n                <input type='text' \r\n                placeholder='Add Task'\r\n                value = {text} \r\n                onChange={(e) =>\r\n                    setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label> Day and Time </label>\r\n                <input type='text' \r\n                    placeholder='Add Day and Time'\r\n                    value = {day} \r\n                    onChange={(e) =>\r\n                        setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label> Set Reminder </label>\r\n                <input type='checkbox'\r\n                    checked ={reminder}\r\n                    value = {reminder} \r\n                    onChange={(e) =>\r\n                        setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type='submit' \r\n                value='Save Task' \r\n                className='btn btn-block' />\r\n        </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'   \nimport Header from \"./components.js/Header\"\nimport Tasks from \"./components.js/Tasks\"\nimport AddTask from \"./components.js/AddTask\"\n\n\nconst App =() => {\n  const [showAddTask, setShowAddTask] = useState (false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    } \n\n    getTasks()\n\n  }, [])\n\n  // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch ('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n     \n  }\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n // Add Task\n const addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n\n// To create an id if not using json or server that creates ID for you\n\n//   const id = Math.floor(Math.random() * 10000) + 1\n//   const newTask = {id, ...task}\n//   setTasks([...tasks, newTask])\n\n }\n\n// Delete task\n\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE'\n  })\n  setTasks(tasks.filter((task) => task.id !== id ))\n}\n\n// Toggle reminder\n\n// Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(updTask),\n  })\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) =>\n      task.id === id ? { ...task, reminder: data.reminder } : task\n    )\n  )\n}\n  return (\n    <div className=\"container\">\n      <Header onAdd= {() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks= {tasks} \n        onDelete= {deleteTask} \n        onToggle= {toggleReminder} />\n        ):( 'No tasks to show')\n      }\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}